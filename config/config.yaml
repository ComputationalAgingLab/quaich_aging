genome: hg38
path_genome_folder: /exports/igmm/eddie/wendy-lab/ilia/genomes/hg38
path_genome_fasta: /exports/igmm/eddie/wendy-lab/ilia/genomes/hg38/hg38.fa
chromsizes: /exports/igmm/eddie/wendy-lab/ilia/genomes/hg38/chrfile.txt
ignore_chroms:
    - chr1
    - chr3
    - chr4
    - chr5
    - chr6
    - chr7
    - chr8
    - chr9
    - chr10
    - chr11
    - chr12
    - chr13
    - chr14
    - chr15
    - chr16
    - chr18
    - chr19
    - chr20
    - chr21
    - chr22
    - chrX
    - chrY
    - chrM

# Samples file with two columns: sample name ("sample") and path/url with cool file ("file").
# If it's URL, it will be downloaded. If the file is already downloaded it will not be overwritten.
# The downloaded file will be stored as {coolers_folder}/{sample}.mcool
samples: config/samples.tsv
# Annotations file with two columns: annotation name ("bedname") and "file" (URLs or local file)
# Downloaded bed files will be stored in beds_folder
annotations: config/annotations.tsv
# Rules about correpondence between samples and annotations can be specified here
samples_annotations_combinations: config/samples_annotations.tsv

# folder definition is optional
# by default everything is done using inputs in inputs/
# and results saved in results/
inputs_folder: inputs
beds_folder: inputs/beds
bedpes_folder: inputs/bedpes
coolers_folder: inputs/coolers

project_folder: results
expected_folder: results/expected
pileups_folder: results/pileups
eigenvectors_folder: results/eigenvectors
saddles_folder: results/saddles
insulation_folder: results/insulation
tad_folder: results/tads
loop_folder: results/loops
boundary_folder: results/boundaries
loopability_folder: results/loopability

resolutions:
    - 1000000
    - 100000
    - 10000
    - 1000
ignore_resolutions_more_than: 1000000

eigenvector:
    do: True
    resolution_limits:
        - 50000
        - 1000000
saddle:
    do: True
    bins:
        - 10
        - 25
        - 50
        - 100
    distance_limits:
        - 1600000
        - 102400000
    args: --strength --quantiles --qrange 0.01 0.99

pileups:
    do: True
    resolution_limits:
        - 5000
        - 10000
    distance_limits:
        - 500000
        - 1000000
        # - 12500
        # - 102400000
    shifts: 1
    rescale_pad: 1

    bed_pairs:
        do: False # Can use even with pileups['do'] == False
        path: bed_pairs_folder_path
        input:
            convergent_CTCF:
                arguments: ""
                files:
                    -  file1.bed
                    -  file2.bed
loopability:
    do: True
    n_random_samples: 1
    resolutions:
        - 1000
        - 10000
    expected: True
    shifts: 1
    samples: test
    arguments:
        short_range: "--subset 1000 --maxdist 2000000"
        long_range: "--subset 1000 --mindist 2000000"

insulation:
    do: True
    resolutions:
        1000:
            - 3000 # What window sizes to do for what resolution
            - 5000
            - 10000
            - 25000
        10000:
            - 50000
            - 100000
    strength_threshold: 'Li' # Choose between a specific float, Li or Otsu, see https://github.com/open2c/open2c_examples/blob/master/Insulation_and_boundaries.ipynb
    chunksize: 1000000000

call_dots:
    methods:
        chromosight:
            do: True
        mustache:
            do: True
            max_dist: 10000000
            arguments: "-pt 0.05 -st 0.8"
    resolution: 10000
    samples:
        - test_cool

compare_boundaries:
    do: False
    samples:
        - test_cool
        - test_cool
    fold_change_threshold: 5

call_TADs: # By just combining strong boundaries
    do: True
    resolutions:
        10000: # Which window sizes to use for which resolution
            - 50000
            - 100000
            - 200000
            - 500000
            - 1000000
    max_tad_length: 1500000
    samples:
        - test_cool
